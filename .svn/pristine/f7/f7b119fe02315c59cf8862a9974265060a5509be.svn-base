package com.minsheng.app.xunchedai.loan.fragments;

import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.app.Fragment;
import android.util.Log;
import android.view.ContextMenu;
import android.view.LayoutInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.lidroid.xutils.DbUtils;
import com.lidroid.xutils.HttpUtils;
import com.lidroid.xutils.exception.HttpException;
import com.lidroid.xutils.http.RequestParams;
import com.lidroid.xutils.http.ResponseInfo;
import com.lidroid.xutils.http.callback.RequestCallBack;
import com.lidroid.xutils.http.client.HttpRequest;
import com.minsheng.app.xunchedai.R;
import com.minsheng.app.xunchedai.loan.activities.AddLoanActivity;
import com.minsheng.app.xunchedai.loan.adapters.ApplyAdapter;
import com.minsheng.app.xunchedai.loan.adapters.ApplyRightAdapter;
import com.minsheng.app.xunchedai.loan.bean.Loan;
import com.minsheng.app.xunchedai.pullrefresh.OnRefreshListener;
import com.minsheng.app.xunchedai.pullrefresh.PullRefreshLayout;
import com.minsheng.app.xunchedai.utils.DBManager;
import com.minsheng.app.xunchedai.utils.PreferenceUtils;
import com.minsheng.app.xunchedai.utils.T;
import com.minsheng.app.xunchedai.utils.WebServiceUrl;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by Administrator on 2016/8/5.
 * 首页主页Fragment
 */
public class LoanDraftFragment extends Fragment implements OnRefreshListener,AdapterView.OnItemClickListener {
    private View convertView;
    private PullRefreshLayout mRefreshLayout;
    private ListView lv;

    private View empty_view;
    private ImageView iv_empty;
    private TextView tv_empty;
    private ProgressBar pb_emptyview;
    private ApplyRightAdapter adapter;
    private List<Loan>data=new ArrayList<>();
    private Loan loan=new Loan();
    Handler mHandler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            mRefreshLayout.onRefreshComplete();
        }
    };
    private boolean isHas=true;
    private DbUtils db;
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        if (convertView == null) {
            convertView = inflater.inflate(R.layout.fragment_loan_draft, container, false);
            initView(convertView);
            getLoanList();
        }
        ViewGroup viewParent = (ViewGroup) convertView.getParent();
        if (viewParent != null) {
            viewParent.removeView(convertView);
        }
        return convertView;
    }

    @Override
    public void onResume() {
        super.onResume();
        getLoanList();
    }

    //初始化控件
    public void initView(View v)
    {
        mRefreshLayout= (PullRefreshLayout) v.findViewById(R.id.refresh_layout);
        lv= (ListView) v.findViewById(R.id.activity_customer_lv);

        empty_view=v.findViewById(R.id.layout_emptyview);
        iv_empty= (ImageView) v.findViewById(R.id.layout_iv_emptyview);
        tv_empty= (TextView) v.findViewById(R.id.layout_tv_emptyview);
        pb_emptyview= (ProgressBar) v.findViewById(R.id.pb_emptyview);

        mRefreshLayout.setOnRefreshListener(this);
        lv.setOnItemClickListener(this);
        db=DBManager.dbUtils(getActivity());
        registerForContextMenu(lv);
    }

    //获取申请列表的方法
    public void getLoanList()
    {
        data= DBManager.getLoans(db);
        if (data.size() == 0) {
            empty_view.setVisibility(View.VISIBLE);
            pb_emptyview.setVisibility(View.GONE);
            iv_empty.setVisibility(View.VISIBLE);
        } else {
            empty_view.setVisibility(View.GONE);
        }
        adapter = new ApplyRightAdapter(data, getActivity());
        lv.setAdapter(adapter);
        adapter.notifyDataSetChanged();

    }

    @Override
    public void onCreateContextMenu(ContextMenu menu, View v,
                                    ContextMenu.ContextMenuInfo menuInfo) {
        super.onCreateContextMenu(menu, v, menuInfo);
        loan = (Loan) lv
                .getItemAtPosition(((AdapterView.AdapterContextMenuInfo) menuInfo).position);//获取listview的item对象
        Log.i("123","number:"+loan.getId());
       getActivity().getMenuInflater().inflate(R.menu.menu_delete, menu);
    }

    @Override
    public boolean onContextItemSelected(MenuItem item) {
        //删除动作
        if (item.getItemId() == R.id.action_delete) {
             DBManager.deleteLoan(db,loan);
            getLoanList();
        }
        //取消动作
        else if (item.getItemId() == R.id.action_cancel) {
        }
        return super.onContextItemSelected(item);
    }



    @Override
    public void onPullDownRefresh() {
        getLoanList();
        mHandler.sendEmptyMessageDelayed(0, 1000);
    }

    @Override
    public void onPullUpRefresh() {
    }


    //listview的点击事件
    @Override
    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
//        Intent intent=new Intent(getActivity(), AddLoanActivity.class);
//        intent.putExtra("loan_id",String.valueOf(data.get(position).getId()));
//        startActivity(intent);
    }


}
